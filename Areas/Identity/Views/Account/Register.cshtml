@inject SignInManager<AppUser> SignInManager

@model RegisterViewModel
@* @{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"].</h1>

<div class="row">
    <div class="col-md-8">
        <section>
            <form asp-controller="Account" asp-action="Register" asp-route-returnurl="@ViewData["ReturnUrl"]"
                method="post" class="form-horizontal" role="form">
                <h4>Create new account on website.</h4>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="UserName" class="col-md-10 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="UserName" class="form-control" />
                        <span asp-validation-for="UserName" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="col-md-10 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="Password" class="col-md-10 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword" class="col-md-10 control-label"></label>
                    <div class="col-md-10">
                        <input asp-for="ConfirmPassword" class="form-control" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-primary">Sign up</button>
                    </div>
                </div>
            </form>
        </section>
    </div>
    <div class="col-md-4">
        <section>
            <h4>Sign in with account.</h4>
            <hr />
            @{
                var schemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
                var loginProviders = schemes.ToList();
                if (loginProviders.Count == 0)
                {
                    <div>
                        <p>
                            This app is not support for external login
                        </p>
                    </div>
                }
                else
                {
                    <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnurl="@ViewData["ReturnUrl"]"
                method="post" class="form-horizontal" role="form">
                        <div>
                            <p>
                                @foreach (var provider in loginProviders)
                                {
                                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
                                title="Log in using your @provider.Name account">@provider.Name</button>
                                }
                            </p>
                        </div>
                    </form>
                }
            }
        </section>
    </div>
</div>



@section Scripts {
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
} *@

@{
    Layout = "/Views/Shared/_LoginLayout.cshtml";
    ViewData["Title"] = "REGISTER";
}

<div class="p-5">
    <div class="text-center">
    <h1 class="h4 text-gray-900 mb-4">@ViewData["Title"]</h1>
    </div>
    <form class="user" id="account" method="post">
        <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <input asp-for="UserName" class="form-control form-control-user" 
            aria-describedby="emailHelp" placeholder="Enter Username"/>
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="Email" class="form-control form-control-user" 
            aria-describedby="emailHelp" placeholder="Enter Email"/>
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input asp-for="Password" class="form-control form-control-user" placeholder="Enter Password" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>
   
    <div class="form-group">
        <input asp-for="ConfirmPassword" class="form-control form-control-user" placeholder="Repeat Password" />
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary btn-user btn-block">Sign up</button>
    </form>
    <hr>
    @{
        var schemes = await SignInManager.GetExternalAuthenticationSchemesAsync();
        var loginProviders = schemes.ToList();
            if (loginProviders.Count == 0) {
                    <div>
                        <p>
                            This app is not support for external login
                        </p>
                    </div>
                }
            else
                {

        <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal" role="form">      
            @foreach (var provider in loginProviders)
            { 
                string classiconprovider = "";
                string classprovider = "";
                if (provider.DisplayName == "Google") {
                    classprovider = "btn-google";
                    classiconprovider = "fab fa-google fa-fw";
                }
                else if (provider.DisplayName == "Facebook") {
                    classprovider = "btn-facebook";
                    classiconprovider = "fab fa-facebook-f fa-fw";
                }

                <button id="gg" type="submit" class="btn @classprovider btn-user btn-block" 
                    name="provider" value="@provider.Name" 
                    title="Log in using your @provider.DisplayName account">
                    <i class="@classiconprovider"></i>
                    Sign up with @provider.DisplayName
                </button>
            } 
        </form>
           
                } 
    }
    <div class="text-center">
        <a class="small" asp-action="Login" asp-route-returnUrl="@ViewData["ReturnUrl"]">Already have account? Sign in</a>
    </div>
</div>
 

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}